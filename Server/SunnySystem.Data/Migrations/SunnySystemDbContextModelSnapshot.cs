// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SunnySystem.Data;

#nullable disable

namespace SunnySystem.Data.Migrations
{
    [DbContext(typeof(SunnySystemDbContext))]
    partial class SunnySystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:btree_gin", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:btree_gist", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:citext", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:cube", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:dblink", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:dict_int", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:dict_xsyn", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:earthdistance", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:fuzzystrmatch", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:hstore", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:intarray", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:ltree", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:pg_catalog.plv8", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:pg_stat_statements", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:pg_trgm", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:pgcrypto", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:pgrowlocks", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:pgstattuple", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:tablefunc", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:unaccent", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:xml2", ",,")
                .HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("SunnySystem.Data.Models.Bin", b =>
                {
                    b.Property<int>("Binid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("binid");

                    b.Property<int?>("Column")
                        .HasColumnType("INTEGER")
                        .HasColumnName("column");

                    b.Property<int?>("Componentid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("componentid");

                    b.Property<int?>("Piece")
                        .HasColumnType("INTEGER")
                        .HasColumnName("piece");

                    b.Property<int?>("Row")
                        .HasColumnType("INTEGER")
                        .HasColumnName("row");

                    b.Property<int?>("Stash")
                        .HasColumnType("INTEGER")
                        .HasColumnName("stash");

                    b.HasKey("Binid")
                        .HasName("warehouse_pkey");

                    b.HasIndex("Componentid");

                    b.ToTable("warehouse", (string)null);
                });

            modelBuilder.Entity("SunnySystem.Data.Models.Component", b =>
                {
                    b.Property<int>("Componentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("componentid");

                    b.Property<int?>("Cost")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cost");

                    b.Property<int?>("Max")
                        .HasColumnType("INTEGER")
                        .HasColumnName("max");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Componentid")
                        .HasName("componentsmain_pkey");

                    b.ToTable("components", (string)null);
                });

            modelBuilder.Entity("SunnySystem.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("customer_id");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT")
                        .HasColumnName("phone");

                    b.HasKey("CustomerID");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("SunnySystem.Data.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("project_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("end_date");

                    b.Property<string>("ProjectName")
                        .HasColumnType("TEXT")
                        .HasColumnName("project_name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("start_date");

                    b.HasKey("ProjectID");

                    b.HasIndex("CustomerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("SunnySystem.Data.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<int>("Privilage")
                        .HasColumnType("INTEGER")
                        .HasColumnName("privilage");

                    b.HasKey("Username");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Username = "Admin",
                            Password = "Admin",
                            Privilage = -1
                        });
                });

            modelBuilder.Entity("SunnySystem.Data.Models.Bin", b =>
                {
                    b.HasOne("SunnySystem.Data.Models.Component", "Component")
                        .WithMany("Bins")
                        .HasForeignKey("Componentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_warehouse_componentid");

                    b.Navigation("Component");
                });

            modelBuilder.Entity("SunnySystem.Data.Models.Project", b =>
                {
                    b.HasOne("SunnySystem.Data.Models.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_project_customerid");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SunnySystem.Data.Models.Component", b =>
                {
                    b.Navigation("Bins");
                });

            modelBuilder.Entity("SunnySystem.Data.Models.Customer", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
