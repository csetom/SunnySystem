CREATE EXTENSION IF NOT EXISTS btree_gin;
CREATE EXTENSION IF NOT EXISTS btree_gist;
CREATE EXTENSION IF NOT EXISTS citext;
CREATE EXTENSION IF NOT EXISTS cube;
CREATE EXTENSION IF NOT EXISTS dblink;
CREATE EXTENSION IF NOT EXISTS dict_int;
CREATE EXTENSION IF NOT EXISTS dict_xsyn;
CREATE EXTENSION IF NOT EXISTS earthdistance;
CREATE EXTENSION IF NOT EXISTS fuzzystrmatch;
CREATE EXTENSION IF NOT EXISTS hstore;
CREATE EXTENSION IF NOT EXISTS intarray;
CREATE EXTENSION IF NOT EXISTS ltree;
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'pg_catalog') THEN
        CREATE SCHEMA pg_catalog;
    END IF;
END $EF$;


CREATE EXTENSION IF NOT EXISTS plv8 SCHEMA pg_catalog;
CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
CREATE EXTENSION IF NOT EXISTS pg_trgm;
CREATE EXTENSION IF NOT EXISTS pgcrypto;
CREATE EXTENSION IF NOT EXISTS pgrowlocks;
CREATE EXTENSION IF NOT EXISTS pgstattuple;
CREATE EXTENSION IF NOT EXISTS tablefunc;
CREATE EXTENSION IF NOT EXISTS unaccent;
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS xml2;


CREATE TABLE components (
    componentid integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NULL,
    cost integer NULL,
    max integer NULL,
    CONSTRAINT componentsmain_pkey PRIMARY KEY (componentid)
);


CREATE TABLE customers (
    customer_id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NULL,
    address text NULL,
    phone text NULL,
    email text NULL,
    CONSTRAINT "PK_customers" PRIMARY KEY (customer_id)
);


CREATE TABLE users (
    username text NOT NULL,
    password text NOT NULL,
    privilage integer NOT NULL,
    CONSTRAINT "PK_users" PRIMARY KEY (username)
);


CREATE TABLE warehouse (
    binid integer GENERATED BY DEFAULT AS IDENTITY,
    row integer NULL,
    "column" integer NULL,
    stash integer NULL,
    componentid integer NULL,
    piece integer NULL,
    CONSTRAINT warehouse_pkey PRIMARY KEY (binid),
    CONSTRAINT fk_warehouse_componentid FOREIGN KEY (componentid) REFERENCES components (componentid) ON DELETE CASCADE
);


CREATE TABLE "Projects" (
    project_id integer GENERATED BY DEFAULT AS IDENTITY,
    project_name text NULL,
    start_date timestamp with time zone NOT NULL,
    end_date timestamp with time zone NOT NULL,
    customer_id integer NOT NULL,
    CONSTRAINT "PK_Projects" PRIMARY KEY (project_id),
    CONSTRAINT fk_project_customerid FOREIGN KEY (customer_id) REFERENCES customers (customer_id) ON DELETE RESTRICT
);

CREATE INDEX "IX_Projects_customer_id" ON "Projects" (customer_id);

CREATE INDEX "IX_warehouse_componentid" ON warehouse (componentid);